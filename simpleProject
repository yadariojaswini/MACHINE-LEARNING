# predict student score project
#importing libraries
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error,r2_score

#step 2: Load Dataset
url = "https://raw.githubusercontent.com/AdiPersonalWorks/Random/master/student_scores%20-%20student_scores.csv"
df=pd.read_csv(url)
print(df)

#step 3: Visualizing data
plt.scatter(df["Hours"],df["Scores"])
plt.title("Hours vs Scores")
plt.xlabel("Hours Studied")
plt.ylabel("Score")
plt.grid(True)
plt.show()

#step 4: Prepare data
x=df[["Hours"]]
y=df["Scores"]

#step 5: Train/Test Split
x_train, x_test, y_train, y_test=train_test_split(x,y,test_size=0.2, random_state=42)

#step 6: Train Linear Regression Model
model=LinearRegression()
model.fit(x_train,y_train)

#step 7: Predict
y_pred=model.predict(x_test)

#step 8: Evaluate Model
print("R^2 Score:",r2_score(y_test,y_pred))
print("Mean Absolute Error:",mean_absolute_error(y_test,y_pred))

#step 9: Visualize Regression Line
plt.scatter(x,y,color='blue')
plt.plot(x,model.predict(x), color='red')#regression line
plt.title("Regression line-Student Scores")
plt.xlabel("Hours Studied")
plt.ylabel("Score")
plt.show()

#step 10: Predict for custom input
hours=[[9.25]]
predicted_score=model.predict(hours)
print(f"Predicted score for studying {hours[0][0]} hours={predicted_score[0]:.2f}")
